@model IEnumerable<RestaurantFrontEnd.Library.API_Models.Restaurant>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<style>
    .test2 {
        margin-top: 5px;
    }

    #map {
        height: 100px;
        width: 500px;
    }


    #output {
        font-size: 11px;
    }
</style>

@{
    string query = (string)ViewData["query"];
}

@section query_string {

    <script type="text/javascript">
        var query = '@query';

    </script>

}

@if (query != null && query != "")
{

    <script src="~/js/site.js" asp-append-version="true"></script>
    <script async deferer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCji7qavH8NTarPPbIyYNCtw7TJnmZHKr0&callback=initMap">
    </script>


}



@{
    ViewData["Title"] = "Index";
}


<h2>Index</h2>

<form asp-action="Index" method="get">
    Search for a Restaurant: <br />
    <input id="restsrch" type="search" name="search">
    <button type="submit" class="test2">Submit</button>
</form>
<!--Keeping this around just in case-->
@*<p>
        <a asp-action="Create">Create New</a>
    </p>*@


<div id="map"></div>
<div id="right-panel">
    <div>
        <strong>Results</strong>
    </div>
    <div id="output"></div>
</div>
<div class="loc"></div>

@if (Model != null)
{

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Hours)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Lat)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Lon)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rating)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PriceLevel)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Hours)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lat)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lon)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PriceLevel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    </td>
                </tr>
            }
        </tbody>
    </table>


}






